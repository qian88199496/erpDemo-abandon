<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
    
	<!--1.开启包扫描-->
	<context:component-scan base-package="com.erp"/>
	
	<!--2.导入外部配置文件 jdbc.properties  -->
	<bean id="propertyPlaceholder" 
	class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/property/jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<!--3.配置数据源 通过使用dataSource -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<!-- 数据库驱动 -->
		<property name="driverClass" value="${jdbc.driver}" />
		<!-- 相应驱动的jdbcUrl -->
		<property name="jdbcUrl" value="${jdbc.url}" />
		<!-- 数据库的用户名 -->
		<property name="username" value="${jdbc.username}" />
		<!-- 数据库的密码 -->
		<property name="password" value="${jdbc.password}" />
		<!-- 检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!-- 连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0 -->
		<property name="idleMaxAge" value="30" />
		<!-- 每个分区最大的连接数 -->
		<property name="maxConnectionsPerPartition" value="150" />
		<!-- 每个分区最小的连接数 -->
		<property name="minConnectionsPerPartition" value="5" />
	</bean>

	<!-- ******Spring整合Shiro的配置********* -->
	<!-- 自定义Realm -->
	<bean id="userRealm" class="com.erp.service.realm.ShiroUserRealm">
		<!-- 配置凭证算法匹配器 -->
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<property name="hashAlgorithmName" value="MD5"/>
				<!-- <property name="hashIterations" value="1024"/> -->
			</bean>
		</property>
	</bean>

	<!-- 配置shiro安全管理器,是shiro框架的核心安全管理器 -->
	<bean id="securityManager"
		  class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="userRealm"></property>
	</bean>

	<!-- shiroFilter工厂bean配置 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- shiro的核心安全接口 -->
		<property name="securityManager" ref="securityManager"/>
		<!-- 要求登录时的连接 -->
		<property name="loginUrl" value="/loginUI.do"></property>
		<!-- 登录成功后要跳转的连接(此处已经在登录中处理了) -->
		<!-- <property name="successUrl" value="/index.jsp"></property> -->
		<!-- 访问未对其授权的资源时,要跳转的连接
        <property name="unauthorizedUrl" value="/default.html"></property>-->
		<!-- shiro连接约束配置 -->
		<property name="filterChainDefinitions">
			<value>
				<!-- 对静态资源设置允许匿名访问 -->
				/bower_components/** = anon
				/build/** = anon
				/dist/** = anon
				/plugins/** = anon
				<!-- 可匿名访问路径，例如：验证码、登录连接、退出连接等 -->
				/doLogin.do = anon
				<!-- 退出 -->
				/doLogout.do = logout  <!-- 会调用Subject的logout方法,此方法会将session清空 -->
				<!-- 剩余其他路径，必须认证通过才可以访问 -->
				<!-- /** = authc -->
				/** = anon
			</value>
		</property>
	</bean>



	<!--Shiro生命周期处理器,Shiro框架会负责管理Shiro各种组件对象的生命周期-->
	<bean id="lifecycleBeanPostProcessor"
		  class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

	<!--启用shiro注解权限检查-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		  depends-on="lifecycleBeanPostProcessor"/>
	<bean  class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>
	
	<!--4.配置声明式事务处理 -->
	<!--4.1 定义事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!--添加数据源  -->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!--4.2 定义事务通知及策略 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			
			<tx:method name="find*" propagation="SUPPORTS"/>
			<tx:method name="select*" propagation="SUPPORTS"/>
			<!--其他方法 使用只读不允许更新数据库  -->
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	
	<!--4.3配置事务切面 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.erp.service..*.*(..))" id="pc"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pc"/>
	</aop:config>
	

</beans>